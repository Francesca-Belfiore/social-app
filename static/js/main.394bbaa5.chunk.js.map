{"version":3,"sources":["components/Modal/index.jsx","components/Header/Header.module.scss","components/CreatePost/CreatePost.module.scss","libs/http.js","components/Modal/Modal.module.scss","components/Footer/Footer.module.scss","components/Header/index.jsx","components/CreatePost/index.jsx","pages/NewPost/index.jsx","components/Footer/index.jsx","components/Loading/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Modal","props","className","styles","style","backgroundColor","color","top","message","module","exports","BASE_URL","http","resource","fetch","then","response","json","httpPOST","data","method","headers","body","JSON","stringify","httpDELETE","Header","name","links","link","label","CheckActive","resolved","useResolvedPath","useMatch","path","pathname","end","active","header","map","item","index","to","CreatePost","useState","inputs","setInputs","inputChange","e","state","target","value","formPostObj","setFormPostOnj","modalIsOpen","setIsOpen","useEffect","author","text","date","Date","toISOString","photo","image","createPost","__author","onChange","type","id","placeholder","required","onClick","event","preventDefault","console","log","setTimeout","cols","rows","NewPost","Footer","year","getFullYear","footer","Loading","Home","lazy","Messages","Friends","Login","nav","App","siteName","element","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.394bbaa5.chunk.js","sourcesContent":["//ESERCIZIO: BASE\n//modale che si scatena ogni volta che un messaggio viene creato/eliminato, con\n//due prop che passano il messaggio e il colore della modale es. azzurro, rosso.\n//opzionale: fare pure l'animazione.\n\nimport styles from \"./Modal.module.scss\";\n\nconst Modal = (props) => (\n    <p className={styles.Modal} style={{ backgroundColor: props.color, top: props.top }}>{props.message}</p>\n)\n\nexport default Modal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"active\":\"Header_active__3GX0s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createPost\":\"CreatePost_createPost__3XCbM\",\"__author\":\"CreatePost___author__2lcbm\"};","const BASE_URL = \"https://edgemony-backend.herokuapp.com\";\n\nconst http = (resource) =>\n    fetch(BASE_URL + resource).then((response) => response.json());\n\nconst httpPOST = (resource, data) =>\n    fetch(BASE_URL + resource, {\n        method: \"POST\",\n        headers: { \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n    }).then((response) => response.json());\n\nconst httpDELETE = (resource) =>\n    fetch(BASE_URL + resource, {\n        method: \"DELETE\",\n        headers: { \"Content-type\": \"application/json\",\n        },\n    }).then((response) => response.json());\n\n\nconst fillFriendsList = (friendsNames) => {\n    let value = 0;\n    for (value in [...Array(friendsNames.length).keys()]) {\n        httpPOST(\"/friends\", {\n            name: friendsNames[value],\n            photo: `https://randomuser.me/api/portraits/men/${value}.jpg`,\n        });\n    \n        setTimeout(() => {}, 100);\n    }\n};\n\n\nexport { http, httpPOST, httpDELETE, fillFriendsList };","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__32mLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\"};","//Un componente è una funzione che ritorna un template jsx.\n//I componenti sono dei tag custom, pertanto html ci dà\n//già una linea guida su come costruire un componente.\n\nimport styles from \"./Header.module.scss\"\nimport { Link, useMatch, useResolvedPath } from \"react-router-dom\";\n\nconst Header = (props) => {\n//props è un oggetto che contiene tutti gli attributi\n//che vengono passati sul tag del componente.\n\n    const name = props.name || \"App\";\n    const links = props.links || [{ link: \"\", label: \"\" }];\n    //assegnazioni default in caso props non sia inizializzato\n    //così non genera contenuto utile ma evita errori e che si\n    //rompa l'app. Così si può togliere anche props dal return \n    //sotto nei nomi degli attributi (props.name, props.links).\n\n    const CheckActive = (link) => {\n        const resolved = useResolvedPath(link);\n        const match = useMatch({ path: resolved.pathname, end: true });\n\n        return match ? styles.active : \"\";\n    }; //gli hook di react funzionano solo dentro i componenti,\n    //per tantos criviamo checkActive in maiuscolo se no il linter\n    //(regole dello stile di codice) dà problemi perché non capisce\n    //di essere già all'interno di un componente (non vede contesto).\n\n    //Esiste un modo già incluso nella documentazione di react-router\n    //chiamato NavLink per fare il check se un link è attivo e stilarlo\n    //https://reactrouter.com/docs/en/v6/getting-started/tutorial#active-links\n\n    return (\n        <header className={styles.header}>\n            <h1>{name}</h1>\n            <nav>\n                <ul>\n                    {links.map((item, index) => (\n                        <li key={index}> \n                            {/*a livello di performance react ha\n                            bisogno di un id quando si itera una\n                            sequenza di elementi per distinguerli \n                            meglio. Visivamente non cambia niente\n                            se non far sparire l'errore in console.\n                            Ovviamente la key va messa nel tag più\n                            alto dell'elemento ripetuto.*/}\n                            <Link className={CheckActive(item.link)} to={item.link}>{item.label}</Link>\n                            {/*Il tag Link to è come un a href e viene\n                            usato da react-router-dom per link interni,\n                            a livello di html ritorna un tag a normale*/}\n                        </li>\n                    ))}\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default Header;\n//l'export default esporta un solo modulo e senza un nome \n//(il modulo esportato può poi essere importato anche con \n//un nome diverso. Es. nomi ripetuti). In questo caso si \n//può usare anche l'export nominale ma il lazy loading\n//richiede l'export default.\n\n//Il nome di un modulo esportato col default può essere\n//cambiato in ogni momento, mentre il nome di un modulo\n//esportato tra parentesi graffe può essere cambiato con\n//export modulo \"as\" nuovonome.","import styles from \"./CreatePost.module.scss\"\nimport { httpPOST } from \"../../libs/http\";\nimport { useEffect, useState } from \"react\";\n// import { useReducer } from 'react';\nimport Modal from \"../Modal\";\n\n// Esercizio: cambio stato del form con useReducer\n// const init_state = {author: \"\", image: \"\", message: \"\"};\n\n// const reducer = (state, action) => {    \n//     switch (action.type) {\n//         case \"change-input\":\n//             return { ...state, [action.payload.field]: action.payload.value }; \n//         default:\n//             return state;\n//     }\n// };\n\nconst CreatePost = () => {\n    //controlled components with hooks\n    //si applica ai form per passare gli input\n    \n    const [inputs, setInputs] = useState({});\n    const inputChange = (e) => setInputs(state => ({ ...state, [e.target.name]: e.target.value }));\n    /*  AVANZATO: unifica tutti i cambi di stato degli input del form (con useState)\n        const [ authorInput, setAuthorInput ] = useState(\"\");\n        const [ imgInput, setImgInput ] = useState(\"\");\n        const [ messageInput, setMessageInput ] = useState(\"\");\n\n        const handleImgInput = (event) => setImgInput(event.target.value);\n        const handleMessageInput = (event) => setMessageInput(event.target.value);\n        const handleAuthorInput = (event) => setAuthorInput(event.target.value);\n    */\n\n    // const [state, dispatch] = useReducer(reducer, init_state);\n\n    const [formPostObj, setFormPostOnj] = useState({});\n\n    //Esercizio: MODALE\n    const [modalIsOpen, setIsOpen] = useState(false);\n\n    function showModal() {\n        setIsOpen(true);\n\n        setTimeout(() => {\n            setIsOpen(false);\n        }, 1500);\n    };\n\n    //AL CLICK DEL SEND BUTTON\n    const handleSendBtn = (event) => {\n        event.preventDefault();\n        httpPOST(\"/posts\", formPostObj)\n        console.log(formPostObj);\n        // alert(\"post creato!\");\n        showModal();\n    }\n\n    useEffect(() => {\n        setFormPostOnj({\n            author: inputs.author,\n            text: inputs.message,\n            date: new Date().toISOString(),\n            photo: inputs.image,\n        })\n    }, [inputs.author, inputs.image, inputs.message])\n    //aggiorna lo stato solo quando cambiano le dipendenze tra parentesi quadre\n\n    return (\n        <div className={styles.createPost}>\n            <form>\n\n                {modalIsOpen ? <Modal color=\"lightskyblue\" message=\"Post created!\" top=\"0\" />\n                    : <Modal color=\"lightskyblue\" message=\"Post created!\" top=\"-100px\" />}\n\n                <div className={styles.__author}>\n                    <input\n                        value={inputs.author || \"\"}\n                        onChange={inputChange}\n                        // onChange={(e) => dispatch({type:\"change-input\", payload: {field: \"name\", value: e.target.value}})}\n                        type=\"text\"\n                        name=\"author\"\n                        id=\"author\"\n                        placeholder=\"Author\"\n                        required\n                    />\n                    <input\n                        value={inputs.image || \"\"}\n                        onChange={inputChange}\n                        // onChange={(e) => dispatch({type:\"change-input\", payload: {field: \"name\", value: e.target.value}})}\n                        type=\"text\"\n                        name=\"image\"\n                        id=\"image\"\n                        placeholder=\"Image URL\"\n                    />\n                    <button\n                        type=\"submit\"\n                        onClick={handleSendBtn}\n                    >SEND\n                    </button>\n                </div>\n                <textarea\n                    value={inputs.message || \"\"}\n                    onChange={inputChange}\n                    // onChange={(e) => dispatch({type:\"change-input\", payload: {field: \"name\", value: e.target.value}})}\n                    name=\"message\"\n                    id=\"message\"\n                    cols=\"30\"\n                    rows=\"10\"\n                    placeholder=\"Message\"\n                    required>\n                </textarea>\n            </form>\n        </div>\n    );\n};\n\nexport default CreatePost;","import CreatePost from \"../../components/CreatePost\";\n\nconst NewPost = () => {\n    return <CreatePost/>;\n}\n\nexport default NewPost;","import styles from \"./Footer.module.scss\";\n\nconst Footer = () => {\n\n    const year = new Date().getFullYear();\n\n    return (\n        <footer className={styles.footer}> \n        {/*assegno una class con un bind per\n         importare il modulo css.\n         Scrivendo in questo modo anziché solo\n         className=\"footer\", webpack genera un\n         hash unico nel nome della classe in \n         quella sezione della pagina. Le classi\n         così create sono univoche e ciò evita\n         errori o conflitti nel caso di nomi di\n         classi ripetuti. Un po' come gli id*/}\n            <hr />\n            <p>Copyright FB {year}</p>\n        </footer>\n    );\n};\n\nexport default Footer;","import \"./Loading.scss\"\n\nconst Loading = () => {\n    return (\n        <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n    );\n};\n\nexport default Loading;","import './App.css';\nimport { useState, useEffect, Suspense, lazy } from 'react';\n\nimport Header from './components/Header/index.jsx';\nimport NewPost from './pages/NewPost';\nimport Footer from './components/Footer/index.jsx';\n//viene risolto in quattro modi:\n//- ha trovato ./components/Footer.js\n//- ha trovato ./components/Footer.jsx\n//- ha trovato ./components/Footer/index.js\n//- ha trovato ./components/Footer/index.jsx\n//scrivere un componente in js o jsx non cambia nulla\n//a livello di funzionalità, ma scrivere jsx lo rende\n//riconoscibile e distinguibile dalla logica ad occhio\n\nimport { Routes, Route } from \"react-router-dom\"; \n//libreria per creare route lato client (come avevamo fatto con #)\n//il resto si importa sull'index.js principale che racchiude l'app.\n\n//CODE SPLITTING IN CHUNK E (LAZY) LOADING DINAMICO CON SUSPENCE\nimport Loading from \"./components/Loading\";\n//mentre le pagine caricano viene mostrato il componente Loading.\n//il lazy loading permette all'utente di scaricare solo le parti di sito\n//che gli servono man mano che gli servono.\n//il caricamento dei componenti viene diviso in chunks tramite i metodi\n//di react Suspense e lazy che li gestiscono come fossero una promise.\n//lazy è un'utility di react che wrappa i componenti, mentre la funzione\n//import() è uno standard. (ottimizzazione con split dinamico)\nconst Home = lazy(() => import(\"./pages/Home/index.jsx\"));\nconst Messages = lazy(() => import(\"./pages/Messages\"));\nconst Friends = lazy(() => import(\"./pages/Friends\"));\nconst Login = lazy(() => import(/* webPackChunkName: \"home\" */'./pages/Login'));\n//per dare un nome ai chunk senza fare eject e modificare direttamente webpack.\n//la cartella webpack è nascosta di default in react e per lavorarci bisogna prima\n//usare il comando eject che è irreversibile.\n\n//USEREDUCER\n// import { useReducer } from 'react';\n// const INIT_STATE = {\n//   name: \"Feisbrut\",\n//   nav: [\n//     // { link: \"/new-post\", label: \"Create new post\"},\n//     { link: \"/social-app\", label: \"Home\"},\n//     { link: \"/friends\", label: \"Friends\"},\n//     { link: \"/messages\", label: \"Messages\"},\n//   ], \n//   friendsPreview: []\n// }\n// const reducer = (state, action) => {\n//   switch (action.type) {\n//     case \"change-name\":\n//       return { ...state, name: \"Feisbell\" }; \n//       //creo un nuovo state col nome cambiato\n//     default:\n//       return state;\n//       //ritorno lo stato per com'era\n//   }\n// };\n\nconst nav = [\n  { link: \"/social-app\", label: \"Home\"},\n  { link: \"/friends\", label: \"Friends\"},\n  { link: \"/messages\", label: \"Messages\"},\n];\n\nfunction App() {\n  // const [state, dispatch] = useReducer(reducer, INIT_STATE);\n  //useReducer è come useState ma esplicito\n  //il dispatch fa partire l'evento\n  //il reducer è come se fosse un event listener\n  //e contiene la logica per cambiare lo stato\n  //lo stato contiene i dati da visualizzare\n\n  //l'event listener su react non funziona perché non c'è il DOM\n  //c'è un hook di react chiamato useRef che permette di lavorare\n  //con un riferimento dentro al DOM per poterlo manipolare.\n\n  // const siteName = \"Feisbrut\";\n  \n  const [siteName, setSiteName] = useState(\"\");\n  <Login setSiteName={setSiteName} />\n  \n  useEffect(() => {\n    console.log(siteName);\n  }, [siteName])\n\n  return (\n    <div>\n      <Header name={siteName} links={nav}/>\n\n      {/* <button onClick={() => dispatch({type:\"change-name\"})}>Cambia nome</button> */}\n      {/* esempio bottone che cambia titolo alla pagina con useReducer */}\n      \n      <Routes>\n        <Route path=\"/social-app\" element={ <Suspense fallback={<Loading/>}><Home/></Suspense> }/>\n        <Route path=\"/new-post\" element={ <Suspense fallback={<Loading/>}><NewPost/></Suspense> }/>\n        <Route path=\"/messages\" element={ <Suspense fallback={<Loading/>}><Messages/></Suspense> }/>\n        <Route path=\"/friends\" element={ <Suspense fallback={<Loading/>}><Friends/></Suspense> }/>\n        <Route path=\"/login\" element={ <Suspense fallback={<Loading/>}><Login/></Suspense> }/>\n      </Routes>\n\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}